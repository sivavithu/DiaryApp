@model List<DiaryEntry>

<div class="table-responsive rounded shadow-sm">
    <table class="table table-striped table-hover table-bordered mb-0">
        <thead class="table-dark">
            <tr>
                <th scope="col" class="sortable" data-sort="title">
                    Title <i class="bi bi-sort-alpha-down ms-1"></i>
                </th>
                <th scope="col">Content</th>
                <th scope="col" class="sortable" data-sort="date">
                    Date <i class="bi bi-sort-numeric-down ms-1"></i>
                </th>
                <th scope="col">Actions</th>
            </tr>
        </thead>
        <tbody>
            @if (Model?.Any() != true)
            {
                <tr>
                    <td colspan="4" class="text-center text-muted py-4">No diary entries found.</td>
                </tr>
            }
            else
            {
                @foreach (var entry in Model)
                {
                    <tr>
                        <td class="align-middle">@(string.IsNullOrEmpty(entry.Title) ? "Untitled" : entry.Title)</td>
                        <td class="align-middle text-truncate" style="max-width: 300px;" title="@entry.Content">
                            @(entry.Content.Length > 100 ? entry.Content.Substring(0, 100) + "..." : entry.Content)
                        </td>
                        <td class="align-middle">@entry.Creation.ToString("yyyy-MM-dd")</td>
                        <td class="align-middle">
                            <a class="btn btn-primary btn-sm me-2" href="@Url.Action("Edit", "DiaryEntries", new { id = entry.Id })" 
                               title="Edit entry">
                                <i class="bi bi-pencil"></i> Edit
                            </a>
                            <button class="btn btn-danger btn-sm" 
                                    data-bs-toggle="modal" 
                                    data-bs-target="#deleteModal" 
                                    data-id="@entry.Id" 
                                    data-title="@entry.Title" 
                                    title="Delete entry">
                                <i class="bi bi-trash"></i> Delete
                            </button>
                        </td>
                    </tr>
                }
            }
        </tbody>
    </table>
</div>

<!-- Delete Confirmation Modal -->
<div class="modal fade" id="deleteModal" tabindex="-1" aria-labelledby="deleteModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header bg-danger text-white">
                <h5 class="modal-title" id="deleteModalLabel">Confirm Deletion</h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                Are you sure you want to delete the diary entry "<span id="deleteEntryTitle"></span>"? This action cannot be undone.
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <a id="confirmDeleteLink" class="btn btn-danger">Delete</a>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // Handle delete modal data population
        const deleteModal = document.getElementById('deleteModal');
        deleteModal.addEventListener('show.bs.modal', function (event) {
            const button = event.relatedTarget;
            const id = button.getAttribute('data-id');
            const title = button.getAttribute('data-title') || 'Untitled';
            const modalTitle = deleteModal.querySelector('#deleteEntryTitle');
            const confirmLink = deleteModal.querySelector('#confirmDeleteLink');

            modalTitle.textContent = title;
            confirmLink.href = '@Url.Action("Delete", "DiaryEntries")/' + id;
        });

        // Basic client-side sorting (placeholder for demonstration)
        document.querySelectorAll('.sortable').forEach(th => {
            th.addEventListener('click', function () {
                const sortKey = this.getAttribute('data-sort');
                // Implement sorting logic or update URL for server-side sorting
                console.log(`Sort by ${sortKey}`);
                // Example: Update URL for server-side sorting
                // window.location.href = `@Url.Action("Index", "DiaryEntries")?sort=${sortKey}`;
            });
        });
    </script>
}